{
  "better-comments": {
    "tags": [
      {
        "tag": "!",
        "color": "#FF2D00",
        "strikethrough": false,
        "underline": false,
        "backgroundColor": "transparent",
        "bold": false,
        "italic": false
      },
      {
        "tag": "?",
        "color": "#3498DB",
        "strikethrough": false,
        "underline": false,
        "backgroundColor": "transparent",
        "bold": false,
        "italic": false
      },
      {
        "tag": "//",
        "color": "#474747",
        "strikethrough": true,
        "underline": false,
        "backgroundColor": "transparent",
        "bold": false,
        "italic": false
      },
      {
        "tag": "todo",
        "color": "#FF8C00",
        "strikethrough": false,
        "underline": false,
        "backgroundColor": "transparent",
        "bold": false,
        "italic": false
      },
      {
        "tag": "*",
        "color": "#98C379",
        "strikethrough": false,
        "underline": false,
        "backgroundColor": "transparent",
        "bold": false,
        "italic": false
      }
    ]
  },

  "diffEditor": {
    "ignoreTrimWhitespace": false
  },

  "editor": {
    "bracketPairColorization": {
      "enabled": true
    },
    "cursorBlinking": "solid",
    "cursorSmoothCaretAnimation": "off",
    "cursorSurroundingLines": 10,
    "cursorSurroundingLinesStyle": "default",
    "defaultFormatter": "esbenp.prettier-vscode",
    "fontFamily": "FiraCode Nerd Font Mono",
    "fontLigatures": true,
    "fontSize": 11,
    "guides": {
      "bracketPairs": "active",
      "bracketPairsHorizontal": "active",
      "highlightActiveBracketPair": true
    },
    "hover": {
      "delay": 300
    },
    "inlayHints": {
      "enabled": "offUnlessPressed"
    },
    // "lineNumbers": "relative",
    "minimap": {
      "enabled": false
    },
    "overviewRulerBorder": false,
    "tabSize": 2
  },

  "eslint": {
    "validate": ["javascript", "javascriptreact", "svelte"]
  },

  "explorer": {
    "autoReveal": false,
    "confirmDelete": false,
    "confirmDragAndDrop": false,
    "openEditors": {
      "visible": 1
    }
  },

  "extensions": {
    "autoCheckUpdates": true,
    "autoUpdate": true,
    "experimental": {
      "affinity": {
        "asvetliakov.vscode-neovim": 1
      }
    }
  },

  "files": {
    "associations": {
      "**/ansible/**/*.yaml": "ansible",
      "*.yml": "yaml",
      "*.yaml": "yaml",
      "*.json5": "jsonc",
      "*.rs": "rust",
      "*.toml": "toml"
    },
    "autoSave": "onFocusChange",
    "eol": "\n",
    "insertFinalNewline": true,
    "trimFinalNewlines": true,
    "trimTrailingWhitespace": true
  },

  "git": {
    "autofetch": true,
    "confirmSync": false,
    "replaceTagsWhenPull": true
  },

  "go": {
    "toolsManagement": {
      "autoUpdate": true
    }
  },

  "gopls": {
    "semanticTokens": true
  },

  "linter": {
    "linters": {
      "yamllint.configFiles": [".yamllint.yml", ".yamllint.yaml", ".yamllint", ".ci/yamllint/.yamllint.yaml"]
    }
  },

  "playwright": {
    "reuseBrowser": true
  },

  "prettier": {
    "printWidth": 120,
    "prettier": {
      "configPath": ".prettierrc"
    }
  },

  "projectManager": {
    "any": {
      "maxDepthRecursion": 2
    },
    "filterOnnfullPath": true,
    "git": {
      "baseFolders": ["/Users/scotte/Development/Projects"],
      "maxDepthRecursion": 2
    }
  },

  "redhat": {
    "telemetry.enabled": false
  },

  "remote": {
    "SSH": {
      "connectTimeout": 30,
      "remotePlatform": {
        "ragnar": "linux",
        "macvm": "macOS",
        "hera": "linux"
      },
      "showLoginTerminal": true,
      "useLocalServer": false
    }
  },

  "rust-analyzer": {
    // "check": {
    //   "command": "clippy"
    // },
    "cargo": {
      "allFeatures": false
    },
    "trace": {
      "server": "verbose",
      "extension": true
    },
    "diagnostics": {
      "enableExperimental": false
    },
    "checkOnSave": {
      "command": "cargo check",
      "enable": true,
      "allTargets": false,
      "overrideCommand": ["cargo", "check", "--message-format=json"]
    },
    "inlayHints": {
      "parameterHints": {
        "enable": false
      },
      "typeHints": {
        "enable": false
      },
      "renderColons": false
    }
  },

  "rust-analyzer": {
    "completion": {
      "snippets": {
        "custom": {
          "Arc::new": {
            "postfix": "arc",
            "body": "Arc::new(${receiver})",
            "requires": "std::sync::Arc",
            "description": "Put the expression into an `Arc`",
            "scope": "expr"
          },
          "Rc::new": {
            "postfix": "rc",
            "body": "Rc::new(${receiver})",
            "requires": "std::rc::Rc",
            "description": "Put the expression into an `Rc`",
            "scope": "expr"
          },
          "Box::pin": {
            "postfix": "pinbox",
            "body": "Box::pin(${receiver})",
            "requires": "std::boxed::Box",
            "description": "Put the expression into a pinned `Box`",
            "scope": "expr"
          },
          "Ok": {
            "postfix": "ok",
            "body": "Ok(${receiver})",
            "description": "Wrap the expression in a `Result::Ok`",
            "scope": "expr"
          },
          "Err": {
            "postfix": "err",
            "body": "Err(${receiver})",
            "description": "Wrap the expression in a `Result::Err`",
            "scope": "expr"
          },
          "Some": {
            "postfix": "some",
            "body": "Some(${receiver})",
            "description": "Wrap the expression in an `Option::Some`",
            "scope": "expr"
          }
        }
      }
    }
  },

  "sops": {
    "binPath": "/opt/homebrew/bin/sops",
    "defaults": {
      "ageKeyFile": "/Users/scotte/.config/sops/age/keys.txt"
    },
    "configPath": "./.sops.yaml"
  },

  "svelte": {
    "enable-ts-plugin": true
  },

  "telemetry": {
    "telemetryLevel": "off"
  },

  "terminal": {
    "integrated": {
      "defaultProfile": {
        "osx": "fish"
      },
      "fontFamily": "FiraCode Nerd Font Mono"
    }
  },

  "todo-tree": {
    "highlights": {
      "useColourScheme": true
    },
    "tree": {
      "expanded": true
    }
  },

  "update": {
    "mode": "default",
    "showReleaseNotes": false
  },

  "vs-kubernetes": {
    "vs-kubernetes": {
      "crd-code-completion": "enabled",
      "ignore-recommendations": true
    }
  },

  "window": {
    "menuBarVisibility": "compact",
    "commandCenter": true
  },

  "workbench": {
    "activityBar": {
      "location": "top"
    },
    "hover": {
      "delay": 1
    },
    "colorCustomizations": {
      "editorCursor": {
        "background": "#ff930f",
        "foreground": "#ff930f"
      },
      "input": {
        "background": "#22212C"
      },
      "editorWidget": {
        "background": "#151320"
      },
      "quickInputList": {
        "focusBackground": "#454158"
      }
    },
    "colorTheme": "Dracula Pro (Van Helsing)",
    "layoutControl": {
      "enabled": false
    },
    "sideBar": {
      "location": "left"
    },
    "startupEditor": "none",
    "tree": {
      "indent": 6,
      "renderIndentGuides": "none"
    },
    "iconTheme": "material-icon-theme"
  },

  "yaml": {
    "format": {
      "enable": true,
      "printWidth": 120
    },
    "schemas": {
      "https://taskfile.dev/schema.json": ["Taskfile.yaml"]
    }
  },

  "zenMode": {
    "centerLayout": false,
    "fullScreen": false,
    "hideLineNumbers": false,
    "showTabs": "single"
  },

  "zig": {
    "zls": {
      "enabled": "on"
    }
  },

  "[fish]": {
    "editor": {
      "tabSize": 2,
      "formatOnSave": true,
      "defaultFormatter": "bmalehorn.vscode-fish"
    }
  },

  "[go]": {
    "editor": {
      "tabSize": 4,
      "formatOnSave": true,
      "defaultFormatter": "golang.go"
    }
  },

  "[json]": {
    "editor": {
      "formatOnSave": false,
      "tabSize": 2
    }
  },

  "[lua]": {
    "editor": {
      "defaultFormatter": "JohnnyMorganz.stylua",
      "formatOnSave": false,
      "tabSize": 2
    }
  },

  "[nix]": {
    "editor": {
      "defaultFormatter": "kamadorueda.alejandra",
      "formatOnSave": false,
      "tabSize": 2
    }
  },

  "[rust]": {
    "editor": {
      "defaultFormatter": "rust-lang.rust-analyzer",
      "formatOnSave": true,
      "formatOnSaveMode": "file",
      "tabSize": 4
    }
  },

  "[python]": {
    "editor": {
      "formatOnType": true
    }
  },

  "[terraform]": {
    "editor": {
      "defaultFormatter": "hashicorp.terraform",
      "formatOnSave": true,
      "tabSize": 2
    }
  },

  "[toml]": {
    "editor": {
      "defaultFormatter": "tamasfe.even-better-toml",
      "formatOnSave": true,
      "tabSize": 4
    }
  },

  "[sql]": {
    "editor": {
      "defaultFormatter": "esbenp.prettier-vscode",
      "formatOnSave": true,
      "tabSize": 4
    }
  },

  "[svelte]": {
    "editor": {
      "defaultFormatter": "svelte.svelte-vscode",
      "tabSize": 4
    }
  },

  "[yaml]": {
    "editor": {
      "defaultFormatter": "esbenp.prettier-vscode",
      "tabSize": 2
    }
  },

  "[zig]": {
    "editor": {
      "defaultFormatter": "ziglang.vscode-zig",
      "formatOnSave": true,
      "tabSize": 4
    }
  }
}
